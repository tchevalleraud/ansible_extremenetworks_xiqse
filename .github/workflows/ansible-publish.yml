name: Publish Collection to Ansible Galaxy

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetech-depth: 0

#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.x'

#      - name: Install Ansible and dependencies
#        run: |
#          pip install ansible ansible-lint

      - name: Get last tag
        id: lasttag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Get commits since last tag
        id: commits
        run: |
          commits=$(git log ${{ steps.lasttag.outputs.tag }}..HEAD --pretty=format:"%s")
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$commits" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine version bump
        id: bump
        run: |
          bump="patch"
          echo "${{ steps.commits.outputs.commits }}" | grep -q 'BREAKING CHANGE\|!:' && bump="major"
          echo "${{ steps.commits.outputs.commits }}" | grep -q '^feat:' && bump="minor"
          echo "bump=$bump" >> $GITHUB_OUTPUT

      - name: Calculate new version
        id: newversion
        run: |
          old="${{ steps.lasttag.outputs.tag }}"
          old=${old#v}
          IFS='.' read -r major minor patch <<< "$old"
          case "${{ steps.bump.outputs.bump }}" in
            major) major=$((major+1)); minor=0; patch=0 ;;
            minor) minor=$((minor+1)); patch=0 ;;
            patch) patch=$((patch+1)) ;;
          esac
          new="v$major.$minor.$patch"
          echo "new=$new" >> $GITHUB_OUTPUT

      - name: Show new version
        run: echo "ðŸ”– New version is ${{ steps.newversion.outputs.new }}"

#      - name: Build Ansible Collection
#        run: |
#          ansible-galaxy collection build --output-path ./dist

#      - name: Publish Collection
#        env:
#          ANSIBLE_GALAXY_API_KEY: ${{ secrets.ANSIBLE_GALAXY_API_KEY }}
#        run: |
#          ansible-galaxy collection publish dist/*.tar.gz --api-key "$ANSIBLE_GALAXY_API_KEY"